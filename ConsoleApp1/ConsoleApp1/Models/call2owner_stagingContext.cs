// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Test.Models;

public partial class call2owner_stagingContext : DbContext
{
    public call2owner_stagingContext(DbContextOptions<call2owner_stagingContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Module> Modules { get; set; }

    public virtual DbSet<ModulePermission> ModulePermissions { get; set; }

    public virtual DbSet<Permission> Permissions { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<RoleClaim> RoleClaims { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Module>(entity =>
        {
            entity.Property(e => e.ModuleName).IsRequired();
        });

        modelBuilder.Entity<ModulePermission>(entity =>
        {
            entity.HasIndex(e => e.ModuleId, "IX_ModulePermissions_ModuleId");

            entity.Property(e => e.PermissionsJson).IsRequired();

            entity.HasOne(d => d.Module).WithMany(p => p.ModulePermissions).HasForeignKey(d => d.ModuleId);
        });

        modelBuilder.Entity<Permission>(entity =>
        {
            entity.Property(e => e.PermissionName).IsRequired();
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasIndex(e => e.ParentRoleId, "IX_Roles_ParentRoleId");

            entity.Property(e => e.RoleName).IsRequired();

            entity.HasOne(d => d.ParentRole).WithMany(p => p.InverseParentRole).HasForeignKey(d => d.ParentRoleId);
        });

        modelBuilder.Entity<RoleClaim>(entity =>
        {
            entity.HasIndex(e => e.RoleId, "IX_RoleClaims_RoleId");

            entity.Property(e => e.ModulePermissionsJson).IsRequired();

            entity.HasOne(d => d.Role).WithMany(p => p.RoleClaims).HasForeignKey(d => d.RoleId);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasIndex(e => e.RoleId, "IX_Users_RoleId");

            entity.Property(e => e.MobileNumber).IsRequired();
            entity.Property(e => e.Otp)
                .HasMaxLength(10)
                .HasColumnName("OTP");
            entity.Property(e => e.RefreshToken).HasMaxLength(1000);

            entity.HasOne(d => d.Role).WithMany(p => p.Users).HasForeignKey(d => d.RoleId);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}